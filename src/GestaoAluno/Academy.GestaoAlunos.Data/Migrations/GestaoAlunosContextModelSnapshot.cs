// <auto-generated />
using System;
using Academy.GestaoAlunos.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Academy.GestaoAlunos.Data.Migrations
{
    [DbContext(typeof(GestaoAlunosContext))]
    partial class GestaoAlunosContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Academy.GestaoAlunos.Domain.Entities.AulaRealizada", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AulaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CursoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MatriculaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("MatriculaId");

                    b.ToTable("AulaRealizadas", (string)null);
                });

            modelBuilder.Entity("Academy.GestaoAlunos.Domain.Entities.Certificado", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodigoVerificacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CursoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataEmissao")
                        .HasColumnType("datetime2");

                    b.Property<string>("NomeDoAluno")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TituloDoCurso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Certificados");
                });

            modelBuilder.Entity("Academy.GestaoAlunos.Domain.Entities.Matricula", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CursoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataConclusao")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Matriculas", (string)null);
                });

            modelBuilder.Entity("Academy.GestaoAlunos.Domain.Entities.ProgressoAluno", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProgressoAlunos", (string)null);
                });

            modelBuilder.Entity("Academy.GestaoAlunos.Domain.Entities.ProgressoAlunoCurso", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CursoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MatriculaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Progresso")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MatriculaId");

                    b.ToTable("ProgressoAlunoCursos", (string)null);
                });

            modelBuilder.Entity("Academy.GestaoAlunos.Domain.Entities.AulaRealizada", b =>
                {
                    b.HasOne("Academy.GestaoAlunos.Domain.Entities.Matricula", "Matricula")
                        .WithMany("AulasRealizadas")
                        .HasForeignKey("MatriculaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Matricula");
                });

            modelBuilder.Entity("Academy.GestaoAlunos.Domain.Entities.ProgressoAluno", b =>
                {
                    b.OwnsOne("Academy.GestaoAlunos.Domain.ObjectValue.HistoricoAprendizado", "HistoricoAprendizado", b1 =>
                        {
                            b1.Property<Guid>("ProgressoAlunoId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("TotalCursosConcluidos")
                                .HasColumnType("int")
                                .HasColumnName("TotalCursosConcluidos");

                            b1.Property<int>("TotalHoras")
                                .HasColumnType("int")
                                .HasColumnName("TotalHoras");

                            b1.HasKey("ProgressoAlunoId");

                            b1.ToTable("ProgressoAlunos");

                            b1.WithOwner()
                                .HasForeignKey("ProgressoAlunoId");
                        });

                    b.Navigation("HistoricoAprendizado")
                        .IsRequired();
                });

            modelBuilder.Entity("Academy.GestaoAlunos.Domain.Entities.ProgressoAlunoCurso", b =>
                {
                    b.HasOne("Academy.GestaoAlunos.Domain.Entities.Matricula", "Matricula")
                        .WithMany()
                        .HasForeignKey("MatriculaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Matricula");
                });

            modelBuilder.Entity("Academy.GestaoAlunos.Domain.Entities.Matricula", b =>
                {
                    b.Navigation("AulasRealizadas");
                });
#pragma warning restore 612, 618
        }
    }
}
