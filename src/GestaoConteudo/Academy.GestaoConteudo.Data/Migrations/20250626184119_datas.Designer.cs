// <auto-generated />
using System;
using Academy.GestaoConteudo.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Academy.GestaoConteudo.Data.Migrations
{
    [DbContext(typeof(GestaoConteudoContext))]
    [Migration("20250626184119_datas")]
    partial class datas
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Academy.GestaoConteudo.Domain.Entities.Aula", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CursoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("Varchar(500)");

                    b.Property<TimeSpan>("Duracao")
                        .HasColumnType("time");

                    b.Property<int>("Ordem")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("Varchar(250)");

                    b.Property<string>("VideoUrl")
                        .IsRequired()
                        .HasColumnType("Varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.ToTable("Aulas", (string)null);
                });

            modelBuilder.Entity("Academy.GestaoConteudo.Domain.Entities.Curso", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("Varchar(500)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("Varchar(250)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Cursos", (string)null);
                });

            modelBuilder.Entity("Academy.GestaoConteudo.Domain.Entities.Aula", b =>
                {
                    b.HasOne("Academy.GestaoConteudo.Domain.Entities.Curso", "Curso")
                        .WithMany("Aulas")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("Academy.GestaoConteudo.Domain.Entities.Curso", b =>
                {
                    b.OwnsOne("Academy.GestaoConteudo.Domain.ObjectValue.ConteudoProgramatico", "ConteudoProgramatico", b1 =>
                        {
                            b1.Property<Guid>("CursoId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Objetivo")
                                .IsRequired()
                                .HasColumnType("Varchar(500)")
                                .HasColumnName("Objetivo");

                            b1.Property<string>("PreRequisitos")
                                .IsRequired()
                                .HasColumnType("Varchar(500)")
                                .HasColumnName("PreRequisitos");

                            b1.HasKey("CursoId");

                            b1.ToTable("Cursos");

                            b1.WithOwner()
                                .HasForeignKey("CursoId");
                        });

                    b.Navigation("ConteudoProgramatico")
                        .IsRequired();
                });

            modelBuilder.Entity("Academy.GestaoConteudo.Domain.Entities.Curso", b =>
                {
                    b.Navigation("Aulas");
                });
#pragma warning restore 612, 618
        }
    }
}
